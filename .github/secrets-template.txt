# GitHub Secrets 配置模板
# 请将此文件中的值替换为您的实际值，然后在 GitHub Settings -> Secrets 中添加

# ================================
# Unity 许可证相关
# ================================
UNITY_LICENSE=<粘贴完整的 Unity 许可证内容>
UNITY_EMAIL=<您的 Unity 账号邮箱>
UNITY_PASSWORD=<您的 Unity 账号密码>

# ================================
# Android 签名相关
# ================================
ANDROID_KEYSTORE_BASE64=<Keystore 文件的 Base64 编码>
ANDROID_KEYSTORE_PASS=<Keystore 密码>
ANDROID_KEYALIAS_NAME=<Key 别名>
ANDROID_KEYALIAS_PASS=<Key 密码>

# ================================
# iOS 签名相关
# ================================
IOS_CERTIFICATE_BASE64=<iOS 证书 .p12 文件的 Base64 编码>
IOS_CERTIFICATE_PASSWORD=<证书导出时设置的密码>
IOS_PROVISION_PROFILE_BASE64=<Provisioning Profile 文件的 Base64 编码>
IOS_PROVISION_PROFILE_NAME=<Provisioning Profile 名称>
IOS_TEAM_ID=<Apple Team ID，如: ABCD123456>
IOS_BUNDLE_ID=<App Bundle ID，如: com.company.appname>
KEYCHAIN_PASSWORD=<随机生成的强密码，用于临时 Keychain>

# ================================
# 蒲公英相关
# ================================
PGYER_API_KEY=<蒲公英 API Key>
PGYER_BUILD_PASSWORD=<安装密码（可选），留空则不设密码>

# ================================
# 快速命令参考
# ================================

# 生成 Android Keystore
# keytool -genkey -v -keystore ra.keystore -alias ra -keyalg RSA -keysize 2048 -validity 10000

# 转换文件为 Base64 (macOS/Linux)
# base64 -i your-file | pbcopy

# 转换文件为 Base64 (Windows PowerShell)
# [Convert]::ToBase64String([IO.File]::ReadAllBytes("your-file")) | clip

# 获取 iOS Team ID
# 访问: https://developer.apple.com/account -> Membership Details

# 导出 iOS 证书
# 钥匙串访问 -> 找到证书 -> 右键导出 -> 保存为 .p12

# 下载 Provisioning Profile
# https://developer.apple.com/account/resources/profiles/list

